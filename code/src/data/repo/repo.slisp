(use "sibilisp/prelude" task (concatenate :as conc) map chain traverse)
(use "../../utils/filesys/fileops" read-json-file)
(use "../../utils/filesys/filepath" filepath)
(use "../../utils/globals/configs" get-widget-configs)



(provide
  (defun get-widgets-list ()
    (|> 
      (get-widget-configs)
      (map filepath-widgets)
      (chain load-all-widgets))))



(defun filepath-widgets (configs)
  (hash-merge configs
              (hash :json (filepath.lift (+ **dirname "/" (getf configs 'file)))
                    :root (filepath.lift (getf configs 'data)))))

(defun load-all-widgets (fpath)
  (|>
    (read-json-file (getf fpath 'json))
    (chain (#(widgets)
            (traverse (getf widgets 'widgets)
                      (getf task 'lift)
                      (#(widget)
                        (load-single-widget 
                          (conc (filepath.dir-name (getf fpath 'json))
                                (conc (getf fpath 'root)
                                      (filepath.lift (getf widget 'path)))))))))))

(defun load-single-widget (fpath)
  (|>
    (read-json-file fpath)
    (map (#(widget-data)
          (hash-merge widget-data (hash :root (.extract (filepath.dir-name fpath))))))))
